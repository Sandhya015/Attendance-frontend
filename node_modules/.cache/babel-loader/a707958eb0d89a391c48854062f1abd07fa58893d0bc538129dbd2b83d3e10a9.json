{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import'./ForgotPasswordPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ForgotPasswordPage=_ref=>{let{openLoginPopup}=_ref;const[formData,setFormData]=useState({email:'',new_password:'',confirm_password:''});const handleChange=e=>setFormData({...formData,[e.target.name]:e.target.value});const handleReset=async e=>{e.preventDefault();const{new_password,confirm_password}=formData;if(new_password!==confirm_password){toast.error('Passwords do not match');return;}try{await axios.post('http://localhost:5000/forgot-password',{email:formData.email,new_password:formData.new_password});toast.success('Password reset successful! Please login.');if(openLoginPopup)openLoginPopup();}catch(err){toast.error('Reset Failed');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-slide\",children:[/*#__PURE__*/_jsx(ToastContainer,{position:\"top-right\",autoClose:3000,theme:\"colored\"}),/*#__PURE__*/_jsx(\"button\",{onClick:openLoginPopup,className:\"close-btn\",children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"img\",{src:\"/Otomeyt_AI_Logo.jpg\",alt:\"Otomeyt AI\",className:\"logo\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleReset,autoComplete:\"off\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Registered Email\",required:true,value:formData.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"new_password\",placeholder:\"New Password\",required:true,value:formData.new_password,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirm_password\",placeholder:\"Confirm Password\",required:true,value:formData.confirm_password,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Reset Password\"}),/*#__PURE__*/_jsx(\"div\",{className:\"extra-links\",children:/*#__PURE__*/_jsx(\"span\",{onClick:openLoginPopup,style:{cursor:'pointer',textDecoration:'underline',color:'#0e1a86',fontWeight:'bold',display:'inline-block',marginTop:'15px',fontSize:'16px'},children:\"Back to Login\"})})]})]});};export default ForgotPasswordPage;","map":{"version":3,"names":["React","useState","axios","ToastContainer","toast","jsx","_jsx","jsxs","_jsxs","ForgotPasswordPage","_ref","openLoginPopup","formData","setFormData","email","new_password","confirm_password","handleChange","e","target","name","value","handleReset","preventDefault","error","post","success","err","className","children","position","autoClose","theme","onClick","src","alt","onSubmit","autoComplete","type","placeholder","required","onChange","style","cursor","textDecoration","color","fontWeight","display","marginTop","fontSize"],"sources":["/home/oto-sandhya/Downloads/attendance-frontend/src/pages/ForgotPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './ForgotPasswordPage.css';\r\n\r\nconst ForgotPasswordPage = ({ openLoginPopup }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    new_password: '',\r\n    confirm_password: '',\r\n  });\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleReset = async (e) => {\r\n    e.preventDefault();\r\n    const { new_password, confirm_password } = formData;\r\n    if (new_password !== confirm_password) {\r\n      toast.error('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/forgot-password', {\r\n        email: formData.email,\r\n        new_password: formData.new_password,\r\n      });\r\n      toast.success('Password reset successful! Please login.');\r\n      if (openLoginPopup) openLoginPopup();\r\n    } catch (err) {\r\n      toast.error('Reset Failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-slide\">\r\n      <ToastContainer position=\"top-right\" autoClose={3000} theme=\"colored\" />\r\n      <button onClick={openLoginPopup} className=\"close-btn\">Ã—</button>\r\n      <img src=\"/Otomeyt_AI_Logo.jpg\" alt=\"Otomeyt AI\" className=\"logo\" />\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleReset} autoComplete=\"off\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Registered Email\"\r\n          required\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"new_password\"\r\n          placeholder=\"New Password\"\r\n          required\r\n          value={formData.new_password}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirm_password\"\r\n          placeholder=\"Confirm Password\"\r\n          required\r\n          value={formData.confirm_password}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Reset Password</button>\r\n        <div className=\"extra-links\">\r\n        <span\r\n  onClick={openLoginPopup}\r\n  style={{\r\n    cursor: 'pointer',\r\n    textDecoration: 'underline',\r\n    color: '#0e1a86',\r\n    fontWeight: 'bold',\r\n    display: 'inline-block',\r\n    marginTop: '15px',\r\n    fontSize: '16px',\r\n  }}\r\n>\r\n  Back to Login\r\n</span>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}