{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\n\n// 1. Create an axios instance with baseURL\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// 2. Automatically attach JWT token from localStorage\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // console.log(config.headers)\n  return config;\n});\n\n// 3. Attendance-related endpoints\nexport const submitLeaveRequest = data => API.post('/leave/request', data);\nexport const getLeaveHistory = () => API.get('/leave/my-requests');\n// export const checkin = () => API.post('/attendance/checkin',{});\nexport const checkin = data => API.post('/attendance/checkin', data);\nexport const getPendingCheckins = () => API.get('/admin/checkins/pending');\nexport const approveCheckin = id => API.post(`/admin/checkins/approve/${id}`);\n\n// export const checkout = () => API.post('/attendance/checkout');\nexport const checkout = data => API.post('/attendance/checkout', data);\nexport const addEmployee = employeeData => API.post('/admin/add-employee', employeeData);\nexport const getHistory = () => API.get('/attendance/history');\nexport const checkAdminExists = () => API.get('/admin/check');\nexport const getAllLeaveRequests = () => API.get('/admin/leave-requests');\nexport const updateLeaveStatus = (id, status) => API.put(`/admin/leave-requests/${id}`, {\n  status\n});\nexport const getEmployeeSummary = () => API.get('/employee/summary');\nexport const addManualAttendance = data => API.post('/admin/manual-attendance', data);\nexport const getProfile = async () => {\n  return await axios.get('http://localhost:5000/employee/profile', {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n};\nconst BASE_URL = 'http://localhost:5000';\nexport const updateEmployeeProfile = async updatedData => {\n  return await axios.put(`${BASE_URL}/employee/update-profile`, updatedData, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n};\n\n// 4. Admin endpoints\n\nexport const getAllRecords = filters => API.get('/admin/records', {\n  params: filters\n});\nexport const exportCSV = () => API.get('/admin/export', {\n  responseType: 'blob'\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","submitLeaveRequest","data","post","getLeaveHistory","get","checkin","getPendingCheckins","approveCheckin","id","checkout","addEmployee","employeeData","getHistory","checkAdminExists","getAllLeaveRequests","updateLeaveStatus","status","put","getEmployeeSummary","addManualAttendance","getProfile","BASE_URL","updateEmployeeProfile","updatedData","getAllRecords","filters","params","exportCSV","responseType"],"sources":["/home/oto-sandhya/Downloads/attendance-frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\nimport axios from 'axios';\r\n\r\n// 1. Create an axios instance with baseURL\r\nconst API = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n});\r\n\r\n// 2. Automatically attach JWT token from localStorage\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  // console.log(config.headers)\r\n  return config;\r\n\r\n});\r\n\r\n// 3. Attendance-related endpoints\r\nexport const submitLeaveRequest = (data) => API.post('/leave/request', data);\r\nexport const getLeaveHistory = () => API.get('/leave/my-requests');\r\n// export const checkin = () => API.post('/attendance/checkin',{});\r\nexport const checkin = (data) => API.post('/attendance/checkin', data);\r\n\r\nexport const getPendingCheckins = () => API.get('/admin/checkins/pending');\r\nexport const approveCheckin = (id) =>\r\n  API.post(`/admin/checkins/approve/${id}`);\r\n\r\n// export const checkout = () => API.post('/attendance/checkout');\r\nexport const checkout = (data) => API.post('/attendance/checkout', data);\r\n\r\nexport const addEmployee = (employeeData) => \r\n  API.post('/admin/add-employee', employeeData);\r\n\r\nexport const getHistory = () => API.get('/attendance/history');\r\nexport const checkAdminExists = () => API.get('/admin/check');\r\nexport const getAllLeaveRequests = () => API.get('/admin/leave-requests');\r\nexport const updateLeaveStatus = (id, status) =>\r\n  API.put(`/admin/leave-requests/${id}`, { status });\r\nexport const getEmployeeSummary = () => API.get('/employee/summary');\r\nexport const addManualAttendance = (data) => API.post('/admin/manual-attendance', data);\r\nexport const getProfile = async () => {\r\n  return await axios.get('http://localhost:5000/employee/profile', {\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem('token')}`\r\n    }\r\n  });\r\n};\r\nconst BASE_URL = 'http://localhost:5000';\r\nexport const updateEmployeeProfile = async (updatedData) => {\r\n  return await axios.put(\r\n    `${BASE_URL}/employee/update-profile`,\r\n    updatedData,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 4. Admin endpoints\r\n\r\nexport const getAllRecords = (filters) =>\r\n  API.get('/admin/records', { params: filters });\r\n\r\n\r\nexport const exportCSV = () =>\r\n  API.get('/admin/export', { responseType: 'blob' });\r\n\r\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}