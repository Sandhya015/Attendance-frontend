{"ast":null,"code":"var _jsxFileName = \"/home/oto-sandhya/Downloads/attendance-frontend/src/pages/EmployeeDashboard.js\";\n// import React, { useEffect, useState } from 'react';\n// import {\n//   checkin,\n//   checkout,\n//   getHistory,\n//   getLeaveHistory,\n//   submitLeaveRequest,\n//   getEmployeeSummary,\n//   getProfile,\n//   updateEmployeeProfile\n// } from '../services/api';\n// import { useNavigate } from 'react-router-dom';\n// import './EmployeeDashboard.css';\n// import ClockGreeting from '../components/ClockGreeting';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// // Modal Components\n// import ProfileModal from '../components/ProfileModal';\n// import SettingsModal from '../components/SettingsModal';\n\n// const EmployeeDashboard = () => {\n//   const [history, setHistory] = useState([]);\n//   const [checkedInToday, setCheckedInToday] = useState(false);\n//   const [leaveHistory, setLeaveHistory] = useState([]);\n//   const [leaveDate, setLeaveDate] = useState('');\n//   const [reason, setReason] = useState('');\n//   const [activeTab, setActiveTab] = useState('attendance');\n//   const [showCheckinModal, setShowCheckinModal] = useState(false);\n//   const [showCheckoutModal, setShowCheckoutModal] = useState(false);\n//   const [attendanceDateTime, setAttendanceDateTime] = useState('');\n\n//   const [summary, setSummary] = useState({\n//     totalDays: 0,\n//     leavesTaken: 0,\n//     attendancePercent: 0,\n//     pendingRequests: 0,\n//   });\n//   const [employee, setEmployee] = useState({\n//     name: '',\n//     email: '',\n//     department: '',\n//   });\n//   const [showProfileDropdown, setShowProfileDropdown] = useState(false);\n//   const [showProfileModal, setShowProfileModal] = useState(false);\n//   const [showSettingsModal, setShowSettingsModal] = useState(false);\n\n//   const navigate = useNavigate();\n//   const leavesLeft = 20 - summary.leavesTaken;\n\n//   useEffect(() => {\n//     fetchAllData();\n//   }, []);\n\n//   const fetchAllData = async () => {\n//     await fetchHistory();\n//     await fetchLeaveHistory();\n//     await fetchSummary();\n//     await fetchEmployeeProfile();\n//   };\n\n//   const fetchEmployeeProfile = async () => {\n//     try {\n//       const res = await getProfile();\n//       setEmployee(res.data);\n//     } catch (err) {\n//       console.error('Failed to fetch profile:', err);\n//       toast.error('Failed to load profile');\n//     }\n//   };\n\n//   const fetchSummary = async () => {\n//     try {\n//       const res = await getEmployeeSummary();\n//       setSummary(res.data);\n//     } catch (err) {\n//       console.error('Failed to fetch summary:', err);\n//       toast.error('Failed to load dashboard data');\n//     }\n//   };\n\n//   const fetchHistory = async () => {\n//     try {\n//       const res = await getHistory();\n//       setHistory(res.data);\n\n//       const today = new Date().toISOString().split('T')[0];\n//       const todayLog = res.data.find((log) => log.date === today);\n\n//       const hasIncompletePrevious = res.data.some(\n//         (log) => log.date !== today && log.checkin && !log.checkout\n//       );\n\n//       if (hasIncompletePrevious) {\n//         setCheckedInToday('needs_checkout');\n//         toast.warning('You have incomplete check-out from previous day');\n//       } else if (todayLog?.checkin && !todayLog?.checkout) {\n//         setCheckedInToday(true);\n//       } else if (todayLog?.checkin && todayLog?.checkout) {\n//         setCheckedInToday('done');\n//       } else {\n//         setCheckedInToday(false);\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       toast.error('Failed to load attendance history');\n//     }\n//   };\n\n//   const fetchLeaveHistory = async () => {\n//     try {\n//       const res = await getLeaveHistory();\n//       setLeaveHistory(res.data);\n//     } catch (err) {\n//       console.error('Failed to fetch leave history', err);\n//       toast.error('Failed to load leave history');\n//     }\n//   };\n\n//   const handleCheckIn = async () => {\n//     try {\n//       await checkin();\n//       fetchHistory();\n//       toast.success('Checked in successfully!');\n//     } catch (err) {\n//       toast.error(err.response?.data?.msg || 'Check-in failed!');\n//     }\n//   };\n\n//   const handleCheckOut = async () => {\n//     try {\n//       await checkout();\n//       fetchHistory();\n//       toast.success('Checked out successfully!');\n//     } catch (err) {\n//       toast.error(err.response?.data?.msg || 'Check-out failed!');\n//     }\n//   };\n\n//   const handleLeaveSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!leaveDate || !reason) {\n//       toast.warning('Please fill out both fields');\n//       return;\n//     }\n//     try {\n//       await submitLeaveRequest({ date: leaveDate, reason });\n//       toast.success('Leave request submitted');\n//       setLeaveDate('');\n//       setReason('');\n//       fetchLeaveHistory();\n//     } catch (err) {\n//       toast.error(err.response?.data?.msg || 'Leave submission failed');\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     navigate('/');\n//   };\n\n//   const ProfileAvatar = ({ name, department }) => {\n//     const initials = name.split(' ').map(part => part[0]).join('').toUpperCase();\n\n//     const departmentColors = {\n//       HR: '#FF6B6B',\n//       Engineering: '#4ECDC4',\n//       Marketing: '#FFD166',\n//       Sales: '#06D6A0',\n//       Default: '#A5A5A5'\n//     };\n\n//     return (\n//       <div\n//         className=\"profile-avatar\"\n//         style={{\n//           backgroundColor: departmentColors[department] || departmentColors.Default,\n//           cursor: 'pointer'\n//         }}\n//         onClick={() => setShowProfileDropdown(!showProfileDropdown)}\n//       >\n//         {initials}\n//       </div>\n//     );\n//   };\n\n//   const handleSettingsSave = async () => {\n//     try {\n//       await updateEmployeeProfile({\n//         name: employee.name,\n//         department: employee.department,\n//         position: employee.position,\n//       });\n//       toast.success(\"Profile updated successfully!\");\n//       setShowSettingsModal(false);\n//     } catch (error) {\n//       toast.error(\"Failed to update profile\");\n//       console.error(error);\n//     }\n//   };\n\n//   const holidays = [\n//     { name: 'May Day', date: '2025-05-01' },\n//     { name: 'Independence Day', date: '2025-08-15' },\n//     { name: 'Ganesh Chaturthi', date: '2025-08-27' },\n//     { name: 'Gandhi Jayanti', date: '2025-10-02' },\n//     { name: 'Diwali', date: '2025-10-20' },\n//     { name: 'Christmas', date: '2025-12-25' }\n//   ];\n\n//   const today = new Date();\n//   const nextHoliday = holidays.find(holiday => new Date(holiday.date) >= today);\n\n//   return (\n//     <div className=\"emp-container\">\n//       <div className=\"emp-card\">\n//         {/* Header */}\n//         <div className=\"emp-header\">\n//           <div className=\"emp-title\">\n//             <img src=\"/Otomeyt_AI_Logo.jpg\" alt=\"Otomeyt Logo\" className=\"logo\" />\n//             <h1>Employee Dashboard</h1>\n//           </div>\n\n//           <div className=\"profile-section\">\n//             <div className=\"profile-info\">\n//               <span className=\"profile-name\">{employee.name}</span>\n//               <span className=\"profile-dept\">{employee.department}</span>\n//             </div>\n//             <ProfileAvatar name={employee.name} department={employee.department} />\n//             {showProfileDropdown && (\n//               <div className=\"profile-dropdown\">\n//                 <div className=\"dropdown-header\">\n//                   <ProfileAvatar name={employee.name} department={employee.department} size=\"large\" />\n//                   <div>\n//                     <div className=\"dropdown-name\">{employee.name}</div>\n//                     <div className=\"dropdown-email\">{employee.email}</div>\n//                   </div>\n//                 </div>\n//                 <div className=\"dropdown-divider\"></div>\n//                 <div className=\"dropdown-item\" onClick={() => setShowProfileModal(true)}>\n//                   <i className=\"icon-user\"></i> View Profile\n//                 </div>\n//                 <div className=\"dropdown-item\" onClick={() => setShowSettingsModal(true)}>\n//                   <i className=\"icon-settings\"></i> Settings\n//                 </div>\n//                 <div className=\"dropdown-divider\"></div>\n//                 <div className=\"dropdown-item\" onClick={handleLogout}>\n//                   <i className=\"icon-logout\"></i> Logout\n//                 </div>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n\n//         <ClockGreeting employeeName={employee.name.split(' ')[0]} />\n\n//         {/* Summary Cards */}\n//         <div className=\"summary-cards\">\n//           <div className=\"card\"><h4>Upcoming Holiday</h4> <p>{nextHoliday ? ` ${nextHoliday.date}` : 'No upcoming holidays'}</p></div>\n//           <div className=\"card\"><h4>Leaves Taken</h4><p>{summary.leavesTaken}</p></div>\n//           <div className=\"card\"><h4>Leaves Left</h4><p>{leavesLeft}</p></div>\n//           <div className=\"card\"><h4>Pending Requests</h4><p>{summary.pendingRequests}</p></div>\n//         </div>\n\n//         {/* Tab Navigation */}\n//         <div className=\"tab-group\">\n//           <button className={activeTab === 'attendance' ? 'active' : ''} onClick={() => setActiveTab('attendance')}>Attendance</button>\n//           <button className={activeTab === 'leave' ? 'active' : ''} onClick={() => setActiveTab('leave')}>Leave Request</button>\n//           <button className={activeTab === 'holiday' ? 'active' : ''} onClick={() => setActiveTab('holiday')}>Holiday Calendar</button>\n//         </div>\n\n//         {/* Attendance Tab */}\n//         {activeTab === 'attendance' && (\n//           <>\n//             <div className=\"btn-group\">\n//   <button onClick={() => setShowCheckinModal(true)}>Check In</button>\n//   <button onClick={() => setShowCheckoutModal(true)}>Check Out</button>\n//   {/* Check-in Modal */}\n// {showCheckinModal && (\n//   <div className=\"modal-overlay\">\n//     <div className=\"modal-content\">\n//       <h3>Select Date and Time for Check-In</h3>\n//       <input\n//         type=\"datetime-local\"\n//         value={attendanceDateTime}\n//         onChange={(e) => setAttendanceDateTime(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button onClick={async () => {\n//           try {\n//             await checkin({ datetime: attendanceDateTime });\n//             toast.success(\"Checked in successfully!\");\n//             fetchHistory();\n//             setShowCheckinModal(false);\n//             setAttendanceDateTime('');\n//           } catch (err) {\n//             toast.error(\"Check-in failed\");\n//           }\n//         }}>Submit</button>\n//         <button className=\"modal-close\" onClick={() => setShowCheckinModal(false)}>Cancel</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// {/* Check-out Modal */}\n// {showCheckoutModal && (\n//   <div className=\"modal-overlay\">\n//     <div className=\"modal-content\">\n//       <h3>Select Date and Time for Check-Out</h3>\n//       <input\n//         type=\"datetime-local\"\n//         value={attendanceDateTime}\n//         onChange={(e) => setAttendanceDateTime(e.target.value)}\n//       />\n//       <div className=\"modal-buttons\">\n//         <button onClick={async () => {\n//           try {\n//             await checkout({ datetime: attendanceDateTime });\n//             toast.success(\"Checked out successfully!\");\n//             fetchHistory();\n//             setShowCheckoutModal(false);\n//             setAttendanceDateTime('');\n//           } catch (err) {\n//             toast.error(\"Check-out failed\");\n//           }\n//         }}>Submit</button>\n//         <button className=\"modal-close\" onClick={() => setShowCheckoutModal(false)}>Cancel</button>\n//       </div>\n//     </div>\n//   </div>\n// )}\n\n// </div>\n\n//             <div className=\"history\">\n//               <h3>Attendance History</h3>\n//               <table>\n//                 <thead>\n//                   <tr><th>Date</th><th>Check-In</th><th>Check-Out</th></tr>\n//                 </thead>\n//                 <tbody>\n//                   {history.map((log, i) => (\n//                     <tr key={i}>\n//                       <td>{log.date}</td>\n//                       <td>{log.checkin || '—'}</td>\n//                       <td>{log.checkout || '—'}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </>\n//         )}\n\n//         {/* Leave Request Tab */}\n//         {activeTab === 'leave' && (\n//           <>\n//             <div className=\"leave-request\">\n//               <h3>Request Leave</h3>\n//               <form onSubmit={handleLeaveSubmit}>\n//                 <input type=\"date\" value={leaveDate} onChange={(e) => setLeaveDate(e.target.value)} min={new Date().toISOString().split(\"T\")[0]} required />\n//                 <textarea placeholder=\"Reason for leave\" value={reason} onChange={(e) => setReason(e.target.value)} required></textarea>\n//                 <button type=\"submit\">Submit Leave Request</button>\n//               </form>\n//             </div>\n\n//             <div className=\"leave-history\">\n//               <h3>Leave History</h3>\n//               <table>\n//                 <thead>\n//                   <tr><th>Date</th><th>Reason</th><th>Status</th></tr>\n//                 </thead>\n//                 <tbody>\n//                   {leaveHistory.map((req, i) => (\n//                     <tr key={i}>\n//                       <td>{req.date}</td>\n//                       <td>{req.reason}</td>\n//                       <td>{req.status}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           </>\n//         )}\n\n//         {/* Holiday Calendar Tab */}\n//         {activeTab === 'holiday' && (\n//           <div className=\"holiday-calendar\">\n//             <h3>Holiday Calendar - 2025</h3>\n//             <table>\n//               <thead><tr><th>Date</th><th>Day</th><th>Holiday</th></tr></thead>\n//               <tbody>\n//                 <tr><td>01-Jan-25</td><td>Wednesday</td><td>New Year</td></tr>\n//                 <tr><td>14-Jan-25</td><td>Tuesday</td><td>Makara Sankranti</td></tr>\n//                 <tr><td>26-Feb-25</td><td>Wednesday</td><td>Maha Shivaratri</td></tr>\n//                 <tr><td>31-Mar-25</td><td>Monday</td><td>Qutub-E-Ramzan</td></tr>\n//                 <tr><td>01-May-25</td><td>Thursday</td><td>May Day</td></tr>\n//                 <tr><td>15-Aug-25</td><td>Friday</td><td>Independence Day</td></tr>\n//                 <tr><td>27-Aug-25</td><td>Wednesday</td><td>Ganesh Chaturthi</td></tr>\n//                 <tr><td>01-Oct-25</td><td>Wednesday</td><td>Mahanavami</td></tr>\n//                 <tr><td>02-Oct-25</td><td>Thursday</td><td>Gandhi Jayanti</td></tr>\n//                 <tr><td>20-Oct-25</td><td>Monday</td><td>Naraka Chaturdashi</td></tr>\n//                 <tr><td>25-Dec-25</td><td>Thursday</td><td>Christmas</td></tr>\n//               </tbody>\n//             </table>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Profile Modal */}\n//       {showProfileModal && <ProfileModal employee={employee} onClose={() => setShowProfileModal(false)} />}\n//       {showSettingsModal && <SettingsModal employee={employee} setEmployee={setEmployee} onClose={() => setShowSettingsModal(false)} />}\n//       <ToastContainer />\n//     </div>\n//   );\n// };\n\n// export default EmployeeDashboard;\n\nimport React, { useState } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport './EmployeeDashboard.css';\nconst EmployeeDashboard = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const handleTabChange = tab => {\n    if (tab === 'logout') {\n      localStorage.clear();\n      window.location.href = '/';\n    } else {\n      setActiveTab(tab);\n    }\n  };\n  const dummyData = [{\n    name: 'John Doe',\n    function: 'Developer',\n    status: 'ONLINE',\n    date: '2025-05-01'\n  }, {\n    name: 'Jane Smith',\n    function: 'Manager',\n    status: 'OFFLINE',\n    date: '2025-04-20'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    activeTab: activeTab,\n    onTabChange: handleTabChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, activeTab.charAt(0).toUpperCase() + activeTab.slice(1)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }\n  }, \"Employees\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  }, \"Function\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 17\n    }\n  }, \"Employed\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }\n  }, dummyData.map((emp, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 19\n    }\n  }, emp.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 19\n    }\n  }, emp.function), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `badge ${emp.status === 'ONLINE' ? 'green' : 'red'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }\n  }, emp.status)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 19\n    }\n  }, emp.date))))))));\n};\nexport default EmployeeDashboard;","map":{"version":3,"names":["React","useState","Sidebar","EmployeeDashboard","activeTab","setActiveTab","handleTabChange","tab","localStorage","clear","window","location","href","dummyData","name","function","status","date","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onTabChange","charAt","toUpperCase","slice","type","placeholder","map","emp","index","key"],"sources":["/home/oto-sandhya/Downloads/attendance-frontend/src/pages/EmployeeDashboard.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react';\r\n// import {\r\n//   checkin,\r\n//   checkout,\r\n//   getHistory,\r\n//   getLeaveHistory,\r\n//   submitLeaveRequest,\r\n//   getEmployeeSummary,\r\n//   getProfile,\r\n//   updateEmployeeProfile\r\n// } from '../services/api';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './EmployeeDashboard.css';\r\n// import ClockGreeting from '../components/ClockGreeting';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n// // Modal Components\r\n// import ProfileModal from '../components/ProfileModal';\r\n// import SettingsModal from '../components/SettingsModal';\r\n\r\n// const EmployeeDashboard = () => {\r\n//   const [history, setHistory] = useState([]);\r\n//   const [checkedInToday, setCheckedInToday] = useState(false);\r\n//   const [leaveHistory, setLeaveHistory] = useState([]);\r\n//   const [leaveDate, setLeaveDate] = useState('');\r\n//   const [reason, setReason] = useState('');\r\n//   const [activeTab, setActiveTab] = useState('attendance');\r\n//   const [showCheckinModal, setShowCheckinModal] = useState(false);\r\n//   const [showCheckoutModal, setShowCheckoutModal] = useState(false);\r\n//   const [attendanceDateTime, setAttendanceDateTime] = useState('');\r\n\r\n//   const [summary, setSummary] = useState({\r\n//     totalDays: 0,\r\n//     leavesTaken: 0,\r\n//     attendancePercent: 0,\r\n//     pendingRequests: 0,\r\n//   });\r\n//   const [employee, setEmployee] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     department: '',\r\n//   });\r\n//   const [showProfileDropdown, setShowProfileDropdown] = useState(false);\r\n//   const [showProfileModal, setShowProfileModal] = useState(false);\r\n//   const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n//   const leavesLeft = 20 - summary.leavesTaken;\r\n\r\n//   useEffect(() => {\r\n//     fetchAllData();\r\n//   }, []);\r\n\r\n//   const fetchAllData = async () => {\r\n//     await fetchHistory();\r\n//     await fetchLeaveHistory();\r\n//     await fetchSummary();\r\n//     await fetchEmployeeProfile();\r\n//   };\r\n\r\n//   const fetchEmployeeProfile = async () => {\r\n//     try {\r\n//       const res = await getProfile();\r\n//       setEmployee(res.data);\r\n//     } catch (err) {\r\n//       console.error('Failed to fetch profile:', err);\r\n//       toast.error('Failed to load profile');\r\n//     }\r\n//   };\r\n\r\n//   const fetchSummary = async () => {\r\n//     try {\r\n//       const res = await getEmployeeSummary();\r\n//       setSummary(res.data);\r\n//     } catch (err) {\r\n//       console.error('Failed to fetch summary:', err);\r\n//       toast.error('Failed to load dashboard data');\r\n//     }\r\n//   };\r\n\r\n//   const fetchHistory = async () => {\r\n//     try {\r\n//       const res = await getHistory();\r\n//       setHistory(res.data);\r\n\r\n//       const today = new Date().toISOString().split('T')[0];\r\n//       const todayLog = res.data.find((log) => log.date === today);\r\n\r\n//       const hasIncompletePrevious = res.data.some(\r\n//         (log) => log.date !== today && log.checkin && !log.checkout\r\n//       );\r\n\r\n//       if (hasIncompletePrevious) {\r\n//         setCheckedInToday('needs_checkout');\r\n//         toast.warning('You have incomplete check-out from previous day');\r\n//       } else if (todayLog?.checkin && !todayLog?.checkout) {\r\n//         setCheckedInToday(true);\r\n//       } else if (todayLog?.checkin && todayLog?.checkout) {\r\n//         setCheckedInToday('done');\r\n//       } else {\r\n//         setCheckedInToday(false);\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       toast.error('Failed to load attendance history');\r\n//     }\r\n//   };\r\n\r\n//   const fetchLeaveHistory = async () => {\r\n//     try {\r\n//       const res = await getLeaveHistory();\r\n//       setLeaveHistory(res.data);\r\n//     } catch (err) {\r\n//       console.error('Failed to fetch leave history', err);\r\n//       toast.error('Failed to load leave history');\r\n//     }\r\n//   };\r\n\r\n//   const handleCheckIn = async () => {\r\n//     try {\r\n//       await checkin();\r\n//       fetchHistory();\r\n//       toast.success('Checked in successfully!');\r\n//     } catch (err) {\r\n//       toast.error(err.response?.data?.msg || 'Check-in failed!');\r\n//     }\r\n//   };\r\n\r\n//   const handleCheckOut = async () => {\r\n//     try {\r\n//       await checkout();\r\n//       fetchHistory();\r\n//       toast.success('Checked out successfully!');\r\n//     } catch (err) {\r\n//       toast.error(err.response?.data?.msg || 'Check-out failed!');\r\n//     }\r\n//   };\r\n\r\n//   const handleLeaveSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!leaveDate || !reason) {\r\n//       toast.warning('Please fill out both fields');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await submitLeaveRequest({ date: leaveDate, reason });\r\n//       toast.success('Leave request submitted');\r\n//       setLeaveDate('');\r\n//       setReason('');\r\n//       fetchLeaveHistory();\r\n//     } catch (err) {\r\n//       toast.error(err.response?.data?.msg || 'Leave submission failed');\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.clear();\r\n//     navigate('/');\r\n//   };\r\n\r\n//   const ProfileAvatar = ({ name, department }) => {\r\n//     const initials = name.split(' ').map(part => part[0]).join('').toUpperCase();\r\n\r\n//     const departmentColors = {\r\n//       HR: '#FF6B6B',\r\n//       Engineering: '#4ECDC4',\r\n//       Marketing: '#FFD166',\r\n//       Sales: '#06D6A0',\r\n//       Default: '#A5A5A5'\r\n//     };\r\n\r\n//     return (\r\n//       <div\r\n//         className=\"profile-avatar\"\r\n//         style={{\r\n//           backgroundColor: departmentColors[department] || departmentColors.Default,\r\n//           cursor: 'pointer'\r\n//         }}\r\n//         onClick={() => setShowProfileDropdown(!showProfileDropdown)}\r\n//       >\r\n//         {initials}\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n\r\n//   const handleSettingsSave = async () => {\r\n//     try {\r\n//       await updateEmployeeProfile({\r\n//         name: employee.name,\r\n//         department: employee.department,\r\n//         position: employee.position,\r\n//       });\r\n//       toast.success(\"Profile updated successfully!\");\r\n//       setShowSettingsModal(false);\r\n//     } catch (error) {\r\n//       toast.error(\"Failed to update profile\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   const holidays = [\r\n//     { name: 'May Day', date: '2025-05-01' },\r\n//     { name: 'Independence Day', date: '2025-08-15' },\r\n//     { name: 'Ganesh Chaturthi', date: '2025-08-27' },\r\n//     { name: 'Gandhi Jayanti', date: '2025-10-02' },\r\n//     { name: 'Diwali', date: '2025-10-20' },\r\n//     { name: 'Christmas', date: '2025-12-25' }\r\n//   ];\r\n\r\n//   const today = new Date();\r\n//   const nextHoliday = holidays.find(holiday => new Date(holiday.date) >= today);\r\n\r\n//   return (\r\n//     <div className=\"emp-container\">\r\n//       <div className=\"emp-card\">\r\n//         {/* Header */}\r\n//         <div className=\"emp-header\">\r\n//           <div className=\"emp-title\">\r\n//             <img src=\"/Otomeyt_AI_Logo.jpg\" alt=\"Otomeyt Logo\" className=\"logo\" />\r\n//             <h1>Employee Dashboard</h1>\r\n//           </div>\r\n\r\n//           <div className=\"profile-section\">\r\n//             <div className=\"profile-info\">\r\n//               <span className=\"profile-name\">{employee.name}</span>\r\n//               <span className=\"profile-dept\">{employee.department}</span>\r\n//             </div>\r\n//             <ProfileAvatar name={employee.name} department={employee.department} />\r\n//             {showProfileDropdown && (\r\n//               <div className=\"profile-dropdown\">\r\n//                 <div className=\"dropdown-header\">\r\n//                   <ProfileAvatar name={employee.name} department={employee.department} size=\"large\" />\r\n//                   <div>\r\n//                     <div className=\"dropdown-name\">{employee.name}</div>\r\n//                     <div className=\"dropdown-email\">{employee.email}</div>\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"dropdown-divider\"></div>\r\n//                 <div className=\"dropdown-item\" onClick={() => setShowProfileModal(true)}>\r\n//                   <i className=\"icon-user\"></i> View Profile\r\n//                 </div>\r\n//                 <div className=\"dropdown-item\" onClick={() => setShowSettingsModal(true)}>\r\n//                   <i className=\"icon-settings\"></i> Settings\r\n//                 </div>\r\n//                 <div className=\"dropdown-divider\"></div>\r\n//                 <div className=\"dropdown-item\" onClick={handleLogout}>\r\n//                   <i className=\"icon-logout\"></i> Logout\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n\r\n//         <ClockGreeting employeeName={employee.name.split(' ')[0]} />\r\n\r\n//         {/* Summary Cards */}\r\n//         <div className=\"summary-cards\">\r\n//           <div className=\"card\"><h4>Upcoming Holiday</h4> <p>{nextHoliday ? ` ${nextHoliday.date}` : 'No upcoming holidays'}</p></div>\r\n//           <div className=\"card\"><h4>Leaves Taken</h4><p>{summary.leavesTaken}</p></div>\r\n//           <div className=\"card\"><h4>Leaves Left</h4><p>{leavesLeft}</p></div>\r\n//           <div className=\"card\"><h4>Pending Requests</h4><p>{summary.pendingRequests}</p></div>\r\n//         </div>\r\n\r\n//         {/* Tab Navigation */}\r\n//         <div className=\"tab-group\">\r\n//           <button className={activeTab === 'attendance' ? 'active' : ''} onClick={() => setActiveTab('attendance')}>Attendance</button>\r\n//           <button className={activeTab === 'leave' ? 'active' : ''} onClick={() => setActiveTab('leave')}>Leave Request</button>\r\n//           <button className={activeTab === 'holiday' ? 'active' : ''} onClick={() => setActiveTab('holiday')}>Holiday Calendar</button>\r\n//         </div>\r\n\r\n//         {/* Attendance Tab */}\r\n//         {activeTab === 'attendance' && (\r\n//           <>\r\n//             <div className=\"btn-group\">\r\n//   <button onClick={() => setShowCheckinModal(true)}>Check In</button>\r\n//   <button onClick={() => setShowCheckoutModal(true)}>Check Out</button>\r\n//   {/* Check-in Modal */}\r\n// {showCheckinModal && (\r\n//   <div className=\"modal-overlay\">\r\n//     <div className=\"modal-content\">\r\n//       <h3>Select Date and Time for Check-In</h3>\r\n//       <input\r\n//         type=\"datetime-local\"\r\n//         value={attendanceDateTime}\r\n//         onChange={(e) => setAttendanceDateTime(e.target.value)}\r\n//       />\r\n//       <div className=\"modal-buttons\">\r\n//         <button onClick={async () => {\r\n//           try {\r\n//             await checkin({ datetime: attendanceDateTime });\r\n//             toast.success(\"Checked in successfully!\");\r\n//             fetchHistory();\r\n//             setShowCheckinModal(false);\r\n//             setAttendanceDateTime('');\r\n//           } catch (err) {\r\n//             toast.error(\"Check-in failed\");\r\n//           }\r\n//         }}>Submit</button>\r\n//         <button className=\"modal-close\" onClick={() => setShowCheckinModal(false)}>Cancel</button>\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// )}\r\n\r\n// {/* Check-out Modal */}\r\n// {showCheckoutModal && (\r\n//   <div className=\"modal-overlay\">\r\n//     <div className=\"modal-content\">\r\n//       <h3>Select Date and Time for Check-Out</h3>\r\n//       <input\r\n//         type=\"datetime-local\"\r\n//         value={attendanceDateTime}\r\n//         onChange={(e) => setAttendanceDateTime(e.target.value)}\r\n//       />\r\n//       <div className=\"modal-buttons\">\r\n//         <button onClick={async () => {\r\n//           try {\r\n//             await checkout({ datetime: attendanceDateTime });\r\n//             toast.success(\"Checked out successfully!\");\r\n//             fetchHistory();\r\n//             setShowCheckoutModal(false);\r\n//             setAttendanceDateTime('');\r\n//           } catch (err) {\r\n//             toast.error(\"Check-out failed\");\r\n//           }\r\n//         }}>Submit</button>\r\n//         <button className=\"modal-close\" onClick={() => setShowCheckoutModal(false)}>Cancel</button>\r\n//       </div>\r\n//     </div>\r\n//   </div>\r\n// )}\r\n\r\n// </div>\r\n\r\n\r\n//             <div className=\"history\">\r\n//               <h3>Attendance History</h3>\r\n//               <table>\r\n//                 <thead>\r\n//                   <tr><th>Date</th><th>Check-In</th><th>Check-Out</th></tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {history.map((log, i) => (\r\n//                     <tr key={i}>\r\n//                       <td>{log.date}</td>\r\n//                       <td>{log.checkin || '—'}</td>\r\n//                       <td>{log.checkout || '—'}</td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n\r\n//         {/* Leave Request Tab */}\r\n//         {activeTab === 'leave' && (\r\n//           <>\r\n//             <div className=\"leave-request\">\r\n//               <h3>Request Leave</h3>\r\n//               <form onSubmit={handleLeaveSubmit}>\r\n//                 <input type=\"date\" value={leaveDate} onChange={(e) => setLeaveDate(e.target.value)} min={new Date().toISOString().split(\"T\")[0]} required />\r\n//                 <textarea placeholder=\"Reason for leave\" value={reason} onChange={(e) => setReason(e.target.value)} required></textarea>\r\n//                 <button type=\"submit\">Submit Leave Request</button>\r\n//               </form>\r\n//             </div>\r\n\r\n//             <div className=\"leave-history\">\r\n//               <h3>Leave History</h3>\r\n//               <table>\r\n//                 <thead>\r\n//                   <tr><th>Date</th><th>Reason</th><th>Status</th></tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {leaveHistory.map((req, i) => (\r\n//                     <tr key={i}>\r\n//                       <td>{req.date}</td>\r\n//                       <td>{req.reason}</td>\r\n//                       <td>{req.status}</td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n\r\n//         {/* Holiday Calendar Tab */}\r\n//         {activeTab === 'holiday' && (\r\n//           <div className=\"holiday-calendar\">\r\n//             <h3>Holiday Calendar - 2025</h3>\r\n//             <table>\r\n//               <thead><tr><th>Date</th><th>Day</th><th>Holiday</th></tr></thead>\r\n//               <tbody>\r\n//                 <tr><td>01-Jan-25</td><td>Wednesday</td><td>New Year</td></tr>\r\n//                 <tr><td>14-Jan-25</td><td>Tuesday</td><td>Makara Sankranti</td></tr>\r\n//                 <tr><td>26-Feb-25</td><td>Wednesday</td><td>Maha Shivaratri</td></tr>\r\n//                 <tr><td>31-Mar-25</td><td>Monday</td><td>Qutub-E-Ramzan</td></tr>\r\n//                 <tr><td>01-May-25</td><td>Thursday</td><td>May Day</td></tr>\r\n//                 <tr><td>15-Aug-25</td><td>Friday</td><td>Independence Day</td></tr>\r\n//                 <tr><td>27-Aug-25</td><td>Wednesday</td><td>Ganesh Chaturthi</td></tr>\r\n//                 <tr><td>01-Oct-25</td><td>Wednesday</td><td>Mahanavami</td></tr>\r\n//                 <tr><td>02-Oct-25</td><td>Thursday</td><td>Gandhi Jayanti</td></tr>\r\n//                 <tr><td>20-Oct-25</td><td>Monday</td><td>Naraka Chaturdashi</td></tr>\r\n//                 <tr><td>25-Dec-25</td><td>Thursday</td><td>Christmas</td></tr>\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Profile Modal */}\r\n//       {showProfileModal && <ProfileModal employee={employee} onClose={() => setShowProfileModal(false)} />}\r\n//       {showSettingsModal && <SettingsModal employee={employee} setEmployee={setEmployee} onClose={() => setShowSettingsModal(false)} />}\r\n//       <ToastContainer />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EmployeeDashboard;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport './EmployeeDashboard.css';\r\n\r\nconst EmployeeDashboard = () => {\r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n\r\n  const handleTabChange = (tab) => {\r\n    if (tab === 'logout') {\r\n      localStorage.clear();\r\n      window.location.href = '/';\r\n    } else {\r\n      setActiveTab(tab);\r\n    }\r\n  };\r\n\r\n  const dummyData = [\r\n    { name: 'John Doe', function: 'Developer', status: 'ONLINE', date: '2025-05-01' },\r\n    { name: 'Jane Smith', function: 'Manager', status: 'OFFLINE', date: '2025-04-20' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar activeTab={activeTab} onTabChange={handleTabChange} />\r\n      <div className=\"main-panel\">\r\n        <div className=\"header\">\r\n          <h1>{activeTab.charAt(0).toUpperCase() + activeTab.slice(1)}</h1>\r\n          <input type=\"text\" placeholder=\"Search here\" />\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <div className=\"card-title\">Employees</div>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Function</th>\r\n                <th>Status</th>\r\n                <th>Employed</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dummyData.map((emp, index) => (\r\n                <tr key={index}>\r\n                  <td>{emp.name}</td>\r\n                  <td>{emp.function}</td>\r\n                  <td>\r\n                    <span className={`badge ${emp.status === 'ONLINE' ? 'green' : 'red'}`}>{emp.status}</span>\r\n                  </td>\r\n                  <td>{emp.date}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDashboard;\r\n\r\n\r\n\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}