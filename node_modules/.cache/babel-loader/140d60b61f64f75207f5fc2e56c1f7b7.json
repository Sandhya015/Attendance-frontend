{"ast":null,"code":"var _jsxFileName = \"/home/oto-sandhya/Downloads/attendance-frontend/src/pages/ForgotPasswordPage.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './ForgotPasswordPage.css';\nconst ForgotPasswordPage = ({\n  openLoginPopup\n}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    new_password: '',\n    confirm_password: ''\n  });\n  const handleChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const handleReset = async e => {\n    e.preventDefault();\n    const {\n      new_password,\n      confirm_password\n    } = formData;\n    if (new_password !== confirm_password) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/forgot-password', {\n        email: formData.email,\n        new_password: formData.new_password\n      });\n      toast.success('Password reset successful! Please login.');\n      if (openLoginPopup) openLoginPopup();\n    } catch (err) {\n      toast.error('Reset Failed');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"top-right\",\n    autoClose: 3000,\n    theme: \"colored\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openLoginPopup,\n    className: \"close-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/Otomeyt_AI_Logo.jpg\",\n    alt: \"Otomeyt AI\",\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleReset,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Registered Email\",\n    required: true,\n    value: formData.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"new_password\",\n    placeholder: \"New Password\",\n    required: true,\n    value: formData.new_password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirm_password\",\n    placeholder: \"Confirm Password\",\n    required: true,\n    value: formData.confirm_password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"extra-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: openLoginPopup,\n    style: {\n      cursor: 'pointer',\n      textDecoration: 'underline',\n      color: '#0e1a86',\n      fontWeight: 'bold',\n      display: 'inline-block',\n      marginTop: '15px',\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Back to Login\"))));\n};\nexport default ForgotPasswordPage;","map":{"version":3,"names":["React","useState","axios","ToastContainer","toast","ForgotPasswordPage","openLoginPopup","formData","setFormData","email","new_password","confirm_password","handleChange","e","target","name","value","handleReset","preventDefault","error","post","success","err","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","autoClose","theme","onClick","src","alt","onSubmit","autoComplete","type","placeholder","required","onChange","style","cursor","textDecoration","color","fontWeight","display","marginTop","fontSize"],"sources":["/home/oto-sandhya/Downloads/attendance-frontend/src/pages/ForgotPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './ForgotPasswordPage.css';\r\n\r\nconst ForgotPasswordPage = ({ openLoginPopup }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    new_password: '',\r\n    confirm_password: '',\r\n  });\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleReset = async (e) => {\r\n    e.preventDefault();\r\n    const { new_password, confirm_password } = formData;\r\n    if (new_password !== confirm_password) {\r\n      toast.error('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/forgot-password', {\r\n        email: formData.email,\r\n        new_password: formData.new_password,\r\n      });\r\n      toast.success('Password reset successful! Please login.');\r\n      if (openLoginPopup) openLoginPopup();\r\n    } catch (err) {\r\n      toast.error('Reset Failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-slide\">\r\n      <ToastContainer position=\"top-right\" autoClose={3000} theme=\"colored\" />\r\n      <button onClick={openLoginPopup} className=\"close-btn\">Ã—</button>\r\n      <img src=\"/Otomeyt_AI_Logo.jpg\" alt=\"Otomeyt AI\" className=\"logo\" />\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleReset} autoComplete=\"off\">\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Registered Email\"\r\n          required\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"new_password\"\r\n          placeholder=\"New Password\"\r\n          required\r\n          value={formData.new_password}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirm_password\"\r\n          placeholder=\"Confirm Password\"\r\n          required\r\n          value={formData.confirm_password}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Reset Password</button>\r\n        <div className=\"extra-links\">\r\n        <span\r\n  onClick={openLoginPopup}\r\n  style={{\r\n    cursor: 'pointer',\r\n    textDecoration: 'underline',\r\n    color: '#0e1a86',\r\n    fontWeight: 'bold',\r\n    display: 'inline-block',\r\n    marginTop: '15px',\r\n    fontSize: '16px',\r\n  }}\r\n>\r\n  Back to Login\r\n</span>\r\n\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}