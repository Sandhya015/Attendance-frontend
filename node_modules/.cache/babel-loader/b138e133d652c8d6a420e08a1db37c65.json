{"ast":null,"code":"var _jsxFileName = \"/home/oto-sandhya/Downloads/attendance-frontend/src/components/SettingsModal.jsx\";\n// import React, { useState } from 'react';\n// import './Modal.css';\n// import { updateEmployeeProfile } from '../services/api'; // Make sure this sends the password too\n// import { toast } from 'react-toastify';\n\n// const SettingsModal = ({ employee, setEmployee, onClose }) => {\n//   const [formData, setFormData] = useState({\n//     name: employee.name,\n//     department: employee.department,\n//     position: employee.position,\n//     password: \"\"\n//   });\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSave = async () => {\n//     try {\n//       const payload = {\n//         name: formData.name,\n//         department: formData.department,\n//         position: formData.position,\n//       };\n\n//       if (formData.password.trim()) {\n//         payload.password = formData.password;\n//       }\n\n//       await updateEmployeeProfile(payload); // Call backend API\n//       setEmployee({ ...employee, ...payload });\n\n//       toast.success(\"Profile updated successfully!\");\n//       onClose();\n//     } catch (error) {\n//       console.error(\"Update failed:\", error);\n//       toast.error(\"Failed to update profile.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal-content\">\n//         <h2>Edit Settings</h2>\n//         <div className=\"settings-form\">\n//           <label>Name:</label>\n//           <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\n\n//           <label>Change Password:</label>\n//           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Enter new password\" />\n\n//           <div className=\"modal-buttons\">\n//             <button onClick={handleSave}>Save</button>\n//             <button className=\"modal-close\" onClick={onClose}>Cancel</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SettingsModal;\n\n// ======================================================NEW FEATURES===============================================\n\nimport React, { useState } from 'react';\nimport './Modal.css';\nimport { updateEmployeeProfile } from '../services/api';\nimport { toast } from 'react-toastify';\nconst SettingsModal = ({\n  employee,\n  setEmployee,\n  onClose\n}) => {\n  const [formData, setFormData] = useState({\n    name: employee.name,\n    department: employee.department || '',\n    position: employee.position || '',\n    join_date: employee.join_date || '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if ((name === 'department' || name === 'position') && /[^a-zA-Z\\s]/.test(value)) {\n      return;\n    }\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSave = async () => {\n    const payload = {\n      name: formData.name.trim(),\n      department: formData.department.trim(),\n      position: formData.position.trim(),\n      join_date: formData.join_date\n    };\n    if (formData.password.trim()) {\n      if (formData.password.length < 8) {\n        toast.warning(\"Password must be at least 8 characters.\");\n        return;\n      }\n      payload.password = formData.password;\n    }\n    try {\n      await updateEmployeeProfile(payload);\n      setEmployee({\n        ...employee,\n        ...payload\n      });\n      toast.success(\"Profile updated successfully!\");\n      onClose();\n    } catch (error) {\n      console.error(\"Update failed:\", error);\n      toast.error(\"Failed to update profile.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Edit Settings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Full Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: formData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Change Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: formData.password,\n    onChange: handleChange,\n    placeholder: \"Minimum 8 characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Department:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"department\",\n    value: formData.department,\n    onChange: handleChange,\n    placeholder: \"e.g. Engineering\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Position:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"position\",\n    value: formData.position,\n    onChange: handleChange,\n    placeholder: \"e.g. Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Date of Joining:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"join_date\",\n    value: formData.join_date,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modal-close\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\nexport default SettingsModal;","map":{"version":3,"names":["React","useState","updateEmployeeProfile","toast","SettingsModal","employee","setEmployee","onClose","formData","setFormData","name","department","position","join_date","password","handleChange","e","value","target","test","handleSave","payload","trim","length","warning","success","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick"],"sources":["/home/oto-sandhya/Downloads/attendance-frontend/src/components/SettingsModal.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Modal.css';\r\n// import { updateEmployeeProfile } from '../services/api'; // Make sure this sends the password too\r\n// import { toast } from 'react-toastify';\r\n\r\n// const SettingsModal = ({ employee, setEmployee, onClose }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: employee.name,\r\n//     department: employee.department,\r\n//     position: employee.position,\r\n//     password: \"\"\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSave = async () => {\r\n//     try {\r\n//       const payload = {\r\n//         name: formData.name,\r\n//         department: formData.department,\r\n//         position: formData.position,\r\n//       };\r\n\r\n//       if (formData.password.trim()) {\r\n//         payload.password = formData.password;\r\n//       }\r\n\r\n//       await updateEmployeeProfile(payload); // Call backend API\r\n//       setEmployee({ ...employee, ...payload });\r\n\r\n//       toast.success(\"Profile updated successfully!\");\r\n//       onClose();\r\n//     } catch (error) {\r\n//       console.error(\"Update failed:\", error);\r\n//       toast.error(\"Failed to update profile.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"modal-overlay\">\r\n//       <div className=\"modal-content\">\r\n//         <h2>Edit Settings</h2>\r\n//         <div className=\"settings-form\">\r\n//           <label>Name:</label>\r\n//           <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n\r\n//           <label>Change Password:</label>\r\n//           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Enter new password\" />\r\n\r\n//           <div className=\"modal-buttons\">\r\n//             <button onClick={handleSave}>Save</button>\r\n//             <button className=\"modal-close\" onClick={onClose}>Cancel</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SettingsModal;\r\n\r\n\r\n\r\n// ======================================================NEW FEATURES===============================================\r\n\r\nimport React, { useState } from 'react';\r\nimport './Modal.css';\r\nimport { updateEmployeeProfile } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SettingsModal = ({ employee, setEmployee, onClose }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: employee.name,\r\n    department: employee.department || '',\r\n    position: employee.position || '',\r\n    join_date: employee.join_date || '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if ((name === 'department' || name === 'position') && /[^a-zA-Z\\s]/.test(value)) {\r\n      return;\r\n    }\r\n\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const payload = {\r\n      name: formData.name.trim(),\r\n      department: formData.department.trim(),\r\n      position: formData.position.trim(),\r\n      join_date: formData.join_date,\r\n    };\r\n\r\n    if (formData.password.trim()) {\r\n      if (formData.password.length < 8) {\r\n        toast.warning(\"Password must be at least 8 characters.\");\r\n        return;\r\n      }\r\n      payload.password = formData.password;\r\n    }\r\n\r\n    try {\r\n      await updateEmployeeProfile(payload);\r\n      setEmployee({ ...employee, ...payload });\r\n      toast.success(\"Profile updated successfully!\");\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"Update failed:\", error);\r\n      toast.error(\"Failed to update profile.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <h2>Edit Settings</h2>\r\n        <div className=\"settings-form\">\r\n          <label>Full Name:</label>\r\n          <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n\r\n          <label>Change Password:</label>\r\n          <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Minimum 8 characters\" />\r\n\r\n          <label>Department:</label>\r\n          <input type=\"text\" name=\"department\" value={formData.department} onChange={handleChange} placeholder=\"e.g. Engineering\" />\r\n\r\n          <label>Position:</label>\r\n          <input type=\"text\" name=\"position\" value={formData.position} onChange={handleChange} placeholder=\"e.g. Developer\" />\r\n\r\n          <label>Date of Joining:</label>\r\n          <input type=\"date\" name=\"join_date\" value={formData.join_date} onChange={handleChange} />\r\n\r\n          <div className=\"modal-buttons\">\r\n            <button onClick={handleSave}>Save</button>\r\n            <button className=\"modal-close\" onClick={onClose}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}